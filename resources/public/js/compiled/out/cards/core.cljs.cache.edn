;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cards.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, mimas.db mimas.db, mimas.core mimas.core, mimas.subs mimas.subs, mimas.handlers mimas.handlers, t cljs.test, cljs.test cljs.test}, :uses {subscribe re-frame.core, dispatch-sync re-frame.core, dropdown mimas.core, state mimas.db, title mimas.core}, :defs {title-subs {:name cards.core/title-subs, :file "src/cards/core.cljs", :line 21, :column 1, :end-line 21, :end-column 16, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 21, :column 6, :end-line 21, :end-column 16}}, tests {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 56, :column 10, :end-line 56, :end-column 15}, :name cards.core/tests, :variadic false, :file "src/cards/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, s clojure.set, clojure.set clojure.set, r reagent.core, reagent.core reagent.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{= :testing-contexts :ns :name :file :end-column :type tests :column cards.core/tests :app/title :initialize :fail :line not :expected :end-line :error :pass :arglists :actual :doc cards.core :test :message}, :order [:app/title :testing-contexts :type :expected :actual :message :error = :pass :fail not cards.core/tests :ns :name :file :end-column :column :line :end-line :arglists :doc :test cards.core tests :initialize]}, :doc nil}