;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name mimas.handlers, :imports nil, :requires {mimas.db mimas.db, re-frame.core re-frame.core}, :uses {state mimas.db, register-handler re-frame.core}, :defs {form-update-value {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 12, :column 7, :end-line 12, :end-column 24, :arglists (quote ([db [_ k v]]))}, :name mimas.handlers/form-update-value, :variadic false, :file "src/mimas/handlers.cljs", :end-column 24, :method-params ([db p__78108]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db [_ k v]]))}, create-new-task {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([title project]))}, :name mimas.handlers/create-new-task, :variadic false, :file "src/mimas/handlers.cljs", :end-column 22, :method-params ([title project]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title project]))}, task-add {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([db _]))}, :name mimas.handlers/task-add, :variadic false, :file "src/mimas/handlers.cljs", :end-column 15, :method-params ([db _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db _]))}, task-edit {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([db [_ task]]))}, :name mimas.handlers/task-edit, :variadic false, :file "src/mimas/handlers.cljs", :end-column 16, :method-params ([db p__78115]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db [_ task]]))}, task-update {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 43, :column 7, :end-line 43, :end-column 18, :arglists (quote ([db _]))}, :name mimas.handlers/task-update, :variadic false, :file "src/mimas/handlers.cljs", :end-column 18, :method-params ([db _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db _]))}, task-remove {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 54, :column 7, :end-line 54, :end-column 18, :arglists (quote ([db [_ id]]))}, :name mimas.handlers/task-remove, :variadic false, :file "src/mimas/handlers.cljs", :end-column 18, :method-params ([db p__78123]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db [_ id]]))}, toggle-task-done {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([list-task handler-task]))}, :name mimas.handlers/toggle-task-done, :variadic false, :file "src/mimas/handlers.cljs", :end-column 23, :method-params ([list-task handler-task]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([list-task handler-task]))}, toggle-done {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/mimas/handlers.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([db [_ task]]))}, :name mimas.handlers/toggle-done, :variadic false, :file "src/mimas/handlers.cljs", :end-column 18, :method-params ([db p__78127]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db [_ task]]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:task/list :task/toggle-done :task/project :form/title :task/title :form/update-value :task/update :task/editing :task/id :initialize :task/add :task/form :task/done? :task/edit :form/project :task/remove}, :order [:initialize :task/form :form/update-value :task/id :task/title :task/project :task/done? :form/title :form/project :task/list :task/add :task/editing :task/edit :task/update :task/remove :task/toggle-done]}, :doc nil}