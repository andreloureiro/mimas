;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cards.core, :imports nil, :requires {t cljs.test, subs mimas.subs, mimas.core mimas.core, schema.core schema.core, reagent.core reagent.core, r reagent.core, mimas.db mimas.db, mimas.subs mimas.subs, cljs.test cljs.test, s schema.core, mimas.handlers mimas.handlers, h mimas.handlers, re-frame.core re-frame.core}, :uses {State mimas.db, subscribe re-frame.core, task-form mimas.core, project-item mimas.core, project-list mimas.core, dispatch-sync re-frame.core, task-list mimas.core, dropdown mimas.core, state mimas.db, task-item mimas.core, title mimas.core, dispatch re-frame.core}, :defs {t_cards$core78286 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78286, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 132, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dropdown-tests {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 123, :column 10, :end-line 123, :end-column 24}, :name cards.core/dropdown-tests, :variadic false, :file "src/cards/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 123, :end-line 123, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_cards$core78304 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78305])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78304, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78305]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78305])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, task-mock {:name cards.core/task-mock, :file "src/cards/core.cljs", :line 57, :column 1, :end-line 57, :end-column 15, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 57, :column 6, :end-line 57, :end-column 15}}, t_cards$core78295 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78295, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 153, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78281 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78282])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78281, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78282]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78282])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, state-mock {:name cards.core/state-mock, :file "src/cards/core.cljs", :line 48, :column 1, :end-line 48, :end-column 16, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 48, :column 6, :end-line 48, :end-column 16}}, ->t_cards$core78295 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78296])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78295, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78296]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78296])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78301 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78302])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78301, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78302]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78302])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78289 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78289, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 141, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78281 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78281, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 118, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78304 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78304, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 183, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78271 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78271, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 103, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dropdown-subs {:name cards.core/dropdown-subs, :file "src/cards/core.cljs", :line 116, :column 1, :end-line 116, :end-column 19, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 116, :column 6, :end-line 116, :end-column 19}}, ->t_cards$core78298 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78299])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78298, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78299]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78299])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, handlers {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 64, :column 10, :end-line 64, :end-column 18}, :name cards.core/handlers, :variadic false, :file "src/cards/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, dropdown-list {:name cards.core/dropdown-list, :file "src/cards/core.cljs", :line 130, :column 1, :end-line 130, :end-column 23, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 130, :column 10, :end-line 130, :end-column 23}}, form-data {:name cards.core/form-data, :file "src/cards/core.cljs", :line 129, :column 1, :end-line 129, :end-column 19, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 129, :column 10, :end-line 129, :end-column 19}}, subscriptions {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 26, :column 10, :end-line 26, :end-column 23}, :name cards.core/subscriptions, :variadic false, :file "src/cards/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t_cards$core78292 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78292, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 147, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78292 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78293])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78292, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78293]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78293])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78286 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78287])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78286, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78287]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78287])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78271 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78272])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78271, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78272]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78272])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78298 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78298, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 162, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core78289 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta78290])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core78289, :variadic false, :file "src/cards/core.cljs", :method-params ([meta78290]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta78290])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core78301 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core78301, :file "src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 167, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, title-subs {:name cards.core/title-subs, :file "src/cards/core.cljs", :line 101, :column 1, :end-line 101, :end-column 16, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 101, :column 6, :end-line 101, :end-column 16}}, title-tests {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 108, :column 10, :end-line 108, :end-column 21}, :name cards.core/title-tests, :variadic false, :file "src/cards/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, r reagent.core, reagent.core reagent.core, s schema.core, schema.core schema.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{State new-edit-task :path :task/list dropdown-tests query meta78287 :project-list = subscribe meta78305 :dropdown/list meta78282 task-mock :testing-contexts meta78272 :inspect-data :empty-task-list :func :ns :name :task-list conj :task/project state-mock :file get :end-column :task-item-done :form/title :project/list :type meta78293 :task/title js/String cards.core/subscriptions :handlers group-by :dropdown db :task/editing cards.core/handlers :task-item :task/id :title :documentation :column :subscription-header state-before-task-finish :subscriptions :app/title :initialize assoc-in meta78290 dropdown-subs :main-obj :fail meta78302 :components-header update :line not type :watch-atom :initial-data handlers state :ok :task/form :task/done? clojure.core/deref subs/simple-sub PersistentVector cards.core/title-tests state-after-task-finish :expected :cards.core :end-line subscriptions :form/project h/task-remove new-task-list s/check :error :title-tests keys PersistentArrayMap :options meta78299 :pass :dropdown-tests :arglists :actual cards.core/dropdown-tests :doc meta78296 cards.core new-form assoc h/toggle-done title-subs KeySeq :task-form :test :task-item-without-project :a :message :heading title-tests}, :order [:initialize :path :func :cards.core :subscription-header :name :documentation :main-obj :initial-data :options :heading :subscriptions :a :ok :type :expected :actual :message :error = s/check State state :pass :fail not clojure.core/deref subs/simple-sub db query subscribe :app/title get type js/String :dropdown/list keys group-by :task/project :task/list KeySeq PersistentVector :task/form PersistentArrayMap cards.core/subscriptions :ns :file :end-column :column :line :end-line :arglists :doc :test cards.core subscriptions :task/editing :form/title :form/project :task/id :task/title :task/done? :handlers :testing-contexts new-form assoc-in state-mock new-task-list update conj task-mock new-edit-task assoc h/task-remove state-after-task-finish h/toggle-done state-before-task-finish cards.core/handlers handlers :components-header :title meta78272 :inspect-data :watch-atom :title-tests title-subs cards.core/title-tests title-tests :dropdown meta78282 :dropdown-tests dropdown-subs cards.core/dropdown-tests dropdown-tests :task-form meta78287 :task-item meta78290 :task-item-done meta78293 :task-item-without-project meta78296 :task-list meta78299 :empty-task-list meta78302 :project-list meta78305 :project/list]}, :doc nil}