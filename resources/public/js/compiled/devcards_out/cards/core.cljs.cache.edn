;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cards.core, :imports nil, :requires {t cljs.test, subs mimas.subs, mimas.core mimas.core, schema.core schema.core, reagent.core reagent.core, r reagent.core, mimas.db mimas.db, mimas.subs mimas.subs, cljs.test cljs.test, s schema.core, mimas.handlers mimas.handlers, h mimas.handlers, re-frame.core re-frame.core}, :uses {State mimas.db, subscribe re-frame.core, task-form mimas.core, dispatch-sync re-frame.core, dropdown mimas.core, state mimas.db, title mimas.core, dispatch re-frame.core}, :defs {dropdown-tests {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 85, :column 10, :end-line 85, :end-column 24}, :name cards.core/dropdown-tests, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, ->t_cards$core58486 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta58487])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core58486, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta58487]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta58487])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, task-mock {:name cards.core/task-mock, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 43, :column 1, :end-line 43, :end-column 15, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 43, :column 6, :end-line 43, :end-column 15}}, t_cards$core58471 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core58471, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 65, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core58471 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta58472])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core58471, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta58472]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta58472])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core58481 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta58482])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core58481, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta58482]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta58482])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cards$core58486 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core58486, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dropdown-subs {:name cards.core/dropdown-subs, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 78, :column 1, :end-line 78, :end-column 19, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 78, :column 6, :end-line 78, :end-column 19}}, t_cards$core58481 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core58481, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 80, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, handlers {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 45, :column 10, :end-line 45, :end-column 18}, :name cards.core/handlers, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, dropdown-list {:name cards.core/dropdown-list, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 92, :column 1, :end-line 92, :end-column 23, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 92, :column 10, :end-line 92, :end-column 23}}, form-data {:name cards.core/form-data, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 91, :column 1, :end-line 91, :end-column 19, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 91, :column 10, :end-line 91, :end-column 19}}, subscriptions {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 21, :column 10, :end-line 21, :end-column 23}, :name cards.core/subscriptions, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, title-subs {:name cards.core/title-subs, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 63, :column 1, :end-line 63, :end-column 16, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 63, :column 6, :end-line 63, :end-column 16}}, title-tests {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 70, :column 10, :end-line 70, :end-column 21}, :name cards.core/title-tests, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, r reagent.core, reagent.core reagent.core, s schema.core, schema.core schema.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{State meta58472 :path :task/list dropdown-tests query meta58487 = subscribe :dropdown/list task-mock :testing-contexts :inspect-data :func :ns :name conj :task/project :file get :end-column :form/title :type task-list-mock :task/title js/String cards.core/subscriptions :handlers :dropdown db meta58482 cards.core/handlers :task/id :title :documentation :column :subscriptions :app/title :initialize assoc-in dropdown-subs :main-obj :fail update :line not type :watch-atom :initial-data handlers state :ok :task/form clojure.core/deref subs/simple-sub PersistentVector cards.core/title-tests :expected :cards.core :end-line subscriptions :form/project form-mock new-task-list s/check :error :title-tests PersistentArrayMap :options :pass :dropdown-tests :arglists :actual cards.core/dropdown-tests :doc cards.core new-form title-subs :task-form :test :a :message title-tests}, :order [:initialize :path :func :cards.core :subscriptions :name :documentation :main-obj :initial-data :options :a :ok :type :expected :actual :message :error = s/check State state :pass :fail not clojure.core/deref subs/simple-sub db query subscribe :app/title get type js/String :dropdown/list PersistentVector :task/list :task/form PersistentArrayMap cards.core/subscriptions :ns :file :end-column :column :line :end-line :arglists :doc :test cards.core subscriptions :task/id :task/title :task/project :handlers :testing-contexts :form/title :form/project new-form assoc-in form-mock new-task-list update task-list-mock conj task-mock cards.core/handlers handlers :title meta58472 :inspect-data :watch-atom :title-tests title-subs cards.core/title-tests title-tests :dropdown meta58482 :dropdown-tests dropdown-subs cards.core/dropdown-tests dropdown-tests :task-form meta58487]}, :doc nil}