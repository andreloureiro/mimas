;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cards.core, :imports nil, :requires {t cljs.test, subs mimas.subs, mimas.core mimas.core, reagent.core reagent.core, r reagent.core, mimas.db mimas.db, mimas.subs mimas.subs, cljs.test cljs.test, mimas.handlers mimas.handlers, re-frame.core re-frame.core}, :uses {subscribe re-frame.core, dispatch-sync re-frame.core, dropdown mimas.core, state mimas.db, title mimas.core}, :defs {subscriptions {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 18, :column 10, :end-line 18, :end-column 23}, :name cards.core/subscriptions, :variadic false, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, title-subs {:name cards.core/title-subs, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 30, :column 1, :end-line 30, :end-column 16, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 30, :column 6, :end-line 30, :end-column 16}}, t_cards$core58300 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core58300, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 32, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core58300 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta58301])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core58300, :variadic false, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta58301]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta58301])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, title-tests {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 36, :column 10, :end-line 36, :end-column 21}, :name cards.core/title-tests, :variadic false, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, dropdown-subs {:name cards.core/dropdown-subs, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 44, :column 1, :end-line 44, :end-column 19, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 44, :column 6, :end-line 44, :end-column 19}}, t_cards$core58310 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core58310, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 46, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core58310 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta58311])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core58310, :variadic false, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta58311]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta58311])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dropdown-tests {:protocol-inline nil, :meta {:file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :line 52, :column 10, :end-line 52, :end-column 24}, :name cards.core/dropdown-tests, :variadic false, :file "/home/andre/Projects/ClojureScript/mimas/src/cards/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, s clojure.set, clojure.set clojure.set, r reagent.core, reagent.core reagent.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:path dropdown-tests query = :dropdown/list meta58301 :func :ns :name :file :end-column :type js/String cards.core/subscriptions :dropdown db :title :documentation :column :subscriptions :app/title :initialize dropdown-subs :main-obj :fail :line not type :watch-atom :initial-data :ok clojure.core/deref subs/simple-sub PersistentVector cards.core/title-tests :expected :cards.core :end-line subscriptions :error :title-tests meta58311 :options :pass :dropdown-tests :arglists :actual cards.core/dropdown-tests :doc cards.core title-subs :test :a :message title-tests}, :order [:initialize :path :func :cards.core :subscriptions :name :documentation :main-obj :initial-data :options :a :ok :type :expected :actual :message :error = clojure.core/deref subs/simple-sub db query :pass :fail not cards.core/subscriptions :ns :file :end-column :column :line :end-line :arglists :doc :test cards.core subscriptions :app/title :title meta58301 :watch-atom :title-tests title-subs js/String type cards.core/title-tests title-tests :dropdown/list :dropdown meta58311 :dropdown-tests PersistentVector dropdown-subs cards.core/dropdown-tests dropdown-tests]}, :doc nil}