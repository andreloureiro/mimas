;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, defcard-rg devcards.core, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name cards.core, :imports nil, :requires {t cljs.test, subs mimas.subs, mimas.core mimas.core, schema.core schema.core, cards.tasks.ui cards.tasks.ui, reagent.core reagent.core, r reagent.core, mimas.db mimas.db, mimas.subs mimas.subs, cljs.test cljs.test, cards.projects.ui cards.projects.ui, s schema.core, mimas.handlers mimas.handlers, cards.projects.subs cards.projects.subs, h mimas.handlers, mimas.util mimas.util, cards.projects.handlers cards.projects.handlers, re-frame.core re-frame.core}, :uses {State mimas.db, initial-state mimas.db, subscribe re-frame.core, simple-sub mimas.util, dispatch-sync re-frame.core, title mimas.core, dispatch re-frame.core}, :defs {subscriptions {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 31, :column 10, :end-line 31, :end-column 23}, :name cards.core/subscriptions, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, state-mock {:name cards.core/state-mock, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 53, :column 1, :end-line 53, :end-column 16, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 53, :column 6, :end-line 53, :end-column 16}}, task-mock {:name cards.core/task-mock, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 62, :column 1, :end-line 62, :end-column 15, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 62, :column 6, :end-line 62, :end-column 15}}, handlers {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 69, :column 10, :end-line 69, :end-column 18}, :name cards.core/handlers, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, title-subs {:name cards.core/title-subs, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 111, :column 1, :end-line 111, :end-column 16, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 111, :column 6, :end-line 111, :end-column 16}}, t_cards$core41173 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/t_cards$core41173, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :type true, :anonymous true, :column 1, :line 113, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cards$core41173 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta41174])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cards.core/->t_cards$core41173, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :method-params ([meta41174]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta41174])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, title-tests {:protocol-inline nil, :meta {:file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :line 118, :column 10, :end-line 118, :end-column 21}, :name cards.core/title-tests, :variadic false, :file "/home/andre/Project/ClojureScript/mimas/src/cards/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {dc devcards.core, devcards.core devcards.core, r reagent.core, reagent.core reagent.core, s schema.core, schema.core schema.core, t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{State :path :task/list initial-state query = subscribe :dropdown/list :inspect-data simple-sub meta41174 :func :ns :name :task/project :file get :end-column :form/title :type :task/title js/String cards.core/subscriptions :handlers group-by db :task/editing cards.core/handlers :task/id :title :documentation :column :subscription-header :subscriptions :app/title :initialize :main-obj :fail :components-header :line not type :watch-atom :initial-data handlers :ok :task/form :task/done? clojure.core/deref PersistentVector cards.core/title-tests :expected :cards.core :end-line subscriptions :form/project s/check :error :title-tests keys PersistentArrayMap :options :pass :arglists :actual :doc cards.core title-subs KeySeq :test :a :message :heading title-tests}, :order [:initialize :path :func :cards.core :subscription-header :name :documentation :main-obj :initial-data :options :heading :subscriptions :a :ok :type :expected :actual :message :error = s/check State initial-state :pass :fail not clojure.core/deref simple-sub db query subscribe :app/title get type js/String :dropdown/list keys group-by :task/project :task/list KeySeq PersistentVector :task/form PersistentArrayMap cards.core/subscriptions :ns :file :end-column :column :line :end-line :arglists :doc :test cards.core subscriptions :task/editing :form/title :form/project :task/id :task/title :task/done? :handlers cards.core/handlers handlers :components-header :title meta41174 :inspect-data :watch-atom :title-tests title-subs cards.core/title-tests title-tests]}, :doc nil}